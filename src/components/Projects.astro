---
import GitHub from "./icons/GitHub.astro";
import NextJS from "./icons/NextJS.astro";
import Tailwind from "./icons/Tailwind.astro";
import Javascript from "./icons/Javascript.astro";
import Link from "./icons/Link.astro";
import LinkButton from "./LinkButton.astro";
import NestJS from "./icons/NestJS.astro";
import Java from "./icons/Java.astro"
import Spring from "./icons/Spring.astro"
import TypeScript from "./icons/TypeScript.astro";

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  JAVASCRIPT: {
    name: "JavaScript",
    class: "bg-[black]  text-white",
    icon: Javascript,
  },
  NESTJS: {
    name: "NestJS",
    class: "bg-[black]  text-white",
    icon: NestJS,
  },
  JAVA: {
    name: "Java",
    class: "bg-[white] text-red-600",
    icon: Java,
  },
  SPRING: {
    name: "Spring",
    class: "bg-[black] text-white",
    icon: Spring,
  },
  TYPESCRIPT: {
    name: "TypeScript",
    class: "bg-[#003159] text-white",
    icon: TypeScript,
  }
};
const PROJECTS = [
  {
    title: "Solution Global Hub - Business Service Management",
    description:
      "A corporate landing page for a business consulting firm offering legal, financial, marketing, and HR services. Built with Next.js, TypeScript, and Tailwind CSS, the site features a responsive design, clean component architecture, and SEO-friendly structure. Developed in close collaboration with a UI designer to ensure accessibility and brand consistency.",
    link: "https://www.solutionglobalhub.com",
    image: "/projects/solution1.png",
    tags: [TAGS.NEXT, TAGS.TYPESCRIPT, TAGS.TAILWIND],
  },
  {
    title: "UniversoCoffee - Specialty Coffee Ecommerce & Events",
    description:
      "A modern e-commerce platform for selling specialty coffee and promoting coffee-related events. Built from scratch with Next.js, TypeScript, Tailwind CSS, Drizzle ORM, and Turso database. It also integrates ShadCN for UI components, Cloudinary for media management, and OAuth for secure authentication.",
    link: "https://www.universocoffee.com.ar",
    image: "/projects/coffee1.png",
    tags: [TAGS.NEXT, TAGS.TYPESCRIPT, TAGS.TAILWIND],
  },
  /* {
    title: "JobFinder - Job Search Platform",
    description:
      "A web platform designed to help users find job opportunities based on their location and preferences. Built with Next.js, JavaScript, and Tailwind CSS, it leverages Prisma ORM with a MySQL database hosted on AWS. The application is deployed on Vercel.",
    link: "https://jobsearchapp.vercel.app/",
    github: "https://github.com/MatiasAlemany/jobsearch-app.git",
    image: "/projects/jobfinder.png",
    tags: [TAGS.NEXT, TAGS.JAVASCRIPT , TAGS.TAILWIND],
  }, */
  {
    title: "Sokoban - Classic puzzle game",
    description:
      "Sokoban game built in JavaScript, inspired by a project from the book 'Eloquent JavaScript'. A puzzle-solving experience with classic gameplay.",
    link: "https://sokobangame-snowy.vercel.app/",
    github: "https://github.com/MatiasAlemany/sokoban-game.git",
    image: "/projects/sokoban.png",
    tags: [TAGS.JAVASCRIPT],
  },
  {
    title: "ChatBot",
    description:
      "An intelligent chatbot built with NestJS to interact with the OpenAI API on the backend, and Next.js with TypeScript to deliver a dynamic and responsive user interface.",
    link: "https://chatbot-uii-livid.vercel.app/",
    github: "https://github.com/MatiasAlemany/chatbot-openai_api",
    image: "/projects/chatternest.png",
    tags: [TAGS.NESTJS, TAGS.NEXT, TAGS.TYPESCRIPT, TAGS.TAILWIND],
  },
  {
    title: "Dinning Review API",
    description:
      "REST API developed with Java and Spring Boot to manage restaurant reviews. It allows users to leave opinions and evaluations about different establishments, storing the information in a structured way in a database.",
    github: "https://github.com/MatiasAlemany/DinningReviewAPI-JAVA",
    image: "/projects/spring.png",
    tags: [TAGS.JAVA, TAGS.SPRING],
  },
  {
    title: "Podcaster",
    description:
      "This project interacts with the iTunes API to display the Top 100 most popular podcasts, their episodes, and an integrated player to listen to them. Built with Next.js and TypeScript, it offers a modern and responsive user experience.",
    link: "https://podcaster-plum.vercel.app/",
      github: "https://github.com/MatiasAlemany/Podcaster.git",
    image: "/projects/podcaster3.png",
    tags: [TAGS.NEXT, TAGS.TYPESCRIPT, TAGS.TAILWIND],
  },
];
---

<div class="grid grid-cols-1 md:grid-cols-2 gap-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class="flex h-full flex-col space-x-0 space-y-8 group">
        <div class="w-full">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <div class="h-64 w-full flex items-center justify-center overflow-hidden">
              <a href={link} target="_blank" rel="noopener noreferrer">
              <img
                alt="Proyect Image"
                class="object-cover w-full h-full transition duration-500 md:group-hover:scale-105"
                loading="lazy"
                src={image}
              />
              </a>
            </div>
          </div>
        </div>

        <div class="">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            {title}
          </h3>
          <div class="flex flex-wrap mt-2">
            <ul class="flex flex-row mb-2 gap-x-2">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class="mt-2 text-gray-700 dark:text-gray-400">
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {github && (
                <LinkButton href={github}>
                  <GitHub class="size-6" />
                  Code
                </LinkButton>
              )}
              {link && (
                <LinkButton href={link}>
                  <Link class="size-4" />
                  Preview
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
